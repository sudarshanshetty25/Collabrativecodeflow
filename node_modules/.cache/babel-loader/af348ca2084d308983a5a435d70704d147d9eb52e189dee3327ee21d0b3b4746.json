{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import toast from'react-hot-toast';import ACTIONS from'../Actions';import Client from'../components/Client';import Editor from'../components/Editor';import{initSocket}from'../socket';import{useLocation,useNavigate,Navigate,useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditorPage=()=>{const socketRef=useRef(null);const codeRef=useRef(null);const location=useLocation();const{roomId}=useParams();const reactNavigator=useNavigate();const[clients,setClients]=useState([]);useEffect(()=>{const init=async()=>{var _location$state;socketRef.current=await initSocket();socketRef.current.on('connect_error',err=>handleErrors(err));socketRef.current.on('connect_failed',err=>handleErrors(err));function handleErrors(e){console.log('socket error',e);toast.error('Socket connection failed, try again later.');reactNavigator('/');}socketRef.current.emit(ACTIONS.JOIN,{roomId,username:(_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.username});// Listening for joined event\nsocketRef.current.on(ACTIONS.JOINED,_ref=>{var _location$state2;let{clients,username,socketId}=_ref;if(username!==((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.username)){toast.success(`${username} joined the room.`);console.log(`${username} joined`);}setClients(clients);socketRef.current.emit(ACTIONS.SYNC_CODE,{code:codeRef.current,socketId});});// Listening for disconnected\nsocketRef.current.on(ACTIONS.DISCONNECTED,_ref2=>{let{socketId,username}=_ref2;toast.success(`${username} left the room.`);setClients(prev=>{return prev.filter(client=>client.socketId!==socketId);});});};init();return()=>{socketRef.current.disconnect();socketRef.current.off(ACTIONS.JOINED);socketRef.current.off(ACTIONS.DISCONNECTED);};},[]);async function copyRoomId(){try{await navigator.clipboard.writeText(roomId);toast.success('Room ID has been copied to your clipboard');}catch(err){toast.error('Could not copy the Room ID');console.error(err);}}function leaveRoom(){reactNavigator('/');}if(!location.state){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mainWrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"aside\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"asideInner\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{className:\"logoImage\",src:\"/code-sync.png\",alt:\"logo\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Connected\"}),/*#__PURE__*/_jsx(\"div\",{className:\"clientsList\",children:clients.map(client=>/*#__PURE__*/_jsx(Client,{username:client.username},client.socketId))})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn copyBtn\",onClick:copyRoomId,children:\"Copy ROOM ID\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn leaveBtn\",onClick:leaveRoom,children:\"Leave\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editorWrap\",children:/*#__PURE__*/_jsx(Editor,{socketRef:socketRef,roomId:roomId,onCodeChange:code=>{codeRef.current=code;}})})]});};export default EditorPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","toast","ACTIONS","Client","Editor","initSocket","useLocation","useNavigate","Navigate","useParams","jsx","_jsx","jsxs","_jsxs","EditorPage","socketRef","codeRef","location","roomId","reactNavigator","clients","setClients","init","_location$state","current","on","err","handleErrors","e","console","log","error","emit","JOIN","username","state","JOINED","_ref","_location$state2","socketId","success","SYNC_CODE","code","DISCONNECTED","_ref2","prev","filter","client","disconnect","off","copyRoomId","navigator","clipboard","writeText","leaveRoom","to","className","children","src","alt","map","onClick","onCodeChange"],"sources":["C:/Users/pc/Downloads/realtime-code-editor-main/realtime-code-editor-main/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport ACTIONS from '../Actions';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport {\n    useLocation,\n    useNavigate,\n    Navigate,\n    useParams,\n} from 'react-router-dom';\n\nconst EditorPage = () => {\n    const socketRef = useRef(null);\n    const codeRef = useRef(null);\n    const location = useLocation();\n    const { roomId } = useParams();\n    const reactNavigator = useNavigate();\n    const [clients, setClients] = useState([]);\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = await initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n                toast.error('Socket connection failed, try again later.');\n                reactNavigator('/');\n            }\n\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            // Listening for joined event\n            socketRef.current.on(\n                ACTIONS.JOINED,\n                ({ clients, username, socketId }) => {\n                    if (username !== location.state?.username) {\n                        toast.success(`${username} joined the room.`);\n                        console.log(`${username} joined`);\n                    }\n                    setClients(clients);\n                    socketRef.current.emit(ACTIONS.SYNC_CODE, {\n                        code: codeRef.current,\n                        socketId,\n                    });\n                }\n            );\n\n            // Listening for disconnected\n            socketRef.current.on(\n                ACTIONS.DISCONNECTED,\n                ({ socketId, username }) => {\n                    toast.success(`${username} left the room.`);\n                    setClients((prev) => {\n                        return prev.filter(\n                            (client) => client.socketId !== socketId\n                        );\n                    });\n                }\n            );\n        };\n        init();\n        return () => {\n            socketRef.current.disconnect();\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n        };\n    }, []);\n\n    async function copyRoomId() {\n        try {\n            await navigator.clipboard.writeText(roomId);\n            toast.success('Room ID has been copied to your clipboard');\n        } catch (err) {\n            toast.error('Could not copy the Room ID');\n            console.error(err);\n        }\n    }\n\n    function leaveRoom() {\n        reactNavigator('/');\n    }\n\n    if (!location.state) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return (\n        <div className=\"mainWrap\">\n            <div className=\"aside\">\n                <div className=\"asideInner\">\n                    <div className=\"logo\">\n                        <img\n                            className=\"logoImage\"\n                            src=\"/code-sync.png\"\n                            alt=\"logo\"\n                        />\n                    </div>\n                    <h3>Connected</h3>\n                    <div className=\"clientsList\">\n                        {clients.map((client) => (\n                            <Client\n                                key={client.socketId}\n                                username={client.username}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <button className=\"btn copyBtn\" onClick={copyRoomId}>\n                    Copy ROOM ID\n                </button>\n                <button className=\"btn leaveBtn\" onClick={leaveRoom}>\n                    Leave\n                </button>\n            </div>\n            <div className=\"editorWrap\">\n                <Editor\n                    socketRef={socketRef}\n                    roomId={roomId}\n                    onCodeChange={(code) => {\n                        codeRef.current = code;\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}